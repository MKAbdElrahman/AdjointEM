\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{juliaplots}

\RequirePackage[usefamily={jl,julia,juliacon}]{pythontex}
\RequirePackage{pgfplots}
\RequirePackage{graphicx}


\begin{jlcode}
	cur_plot = nothing
	function plot_plots_pgfplots(args...; kwags...)
		global cur_plot
		cur_plot = Plots.plot(args...; kwags...)
	end
	function plot_pgfplots(args...; kwags...)
		global cur_plot
		cur_plot = PGFPlots.plot(args...; kwags...)
	end
	function plot_gadfly(args...; kwags...)
		global cur_plot
		cur_plot = Gadfly.plot(args...; kwags...)
	end
\end{jlcode}

DeclareOption{plots_pgfplots}{
\DeclareRobustCommand{\plot}[1]{
\IfFileExists{#1.tex}{}{\newwrite\file
	\immediate\openout\file=#1.tex
	\closeout\file}
	\jlc{savefig(cur_plot, "#1.tex")}\input{#1}}
\jlc{using Plots;pgfplots()}
\jlc{plot(args...; kwags...) = plot_plots_pgfplots(args...; kwags...)}
}

\DeclareOption{pgfplots}{
\DeclareRobustCommand{\plot}[1]{
\IfFileExists{#1.tex}{}{\newwrite\file
	\immediate\openout\file=#1.tex
	\closeout\file}
	\jlc{save("#1.tex", cur_plot, include_preamble=false)}\input{#1}}
\jlc{using PGFPlots}
\jlc{plot(args...; kwags...) = plot_pgfplots(args...; kwags...)}
}

\DeclareOption{pyplot}{
	\newcommand{\plot}[2]{\jlc{savefig("#1.pdf")}\includegraphics[#2]{#1.pdf}}
	\jlc{using PyPlot}
}

\DeclareOption{gadfly}{
	\newcommand{\plot}[4]{\jlc{draw(PDF("#1.pdf", #2, #3), cur_plot)}\includegraphics[#4]{#1.pdf}}
	\jlc{using Gadfly}
	\jlc{plot(args...; kwags...) = plot_gadfly(args...; kwags...)}
}

\ProcessOptions\relax
